/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.abf.librarysupport.project.customizer;

import org.netbeans.spi.project.ui.support.ProjectCustomizer.Category;

import org.openide.util.NbBundle;
import org.openide.util.WeakListeners;

import java.net.URL;

import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

import de.cismet.cids.abf.librarysupport.project.LibrarySupportProject;

import de.cismet.tools.PasswordEncrypter;

/**
 * DOCUMENT ME!
 *
 * @author   mscholl
 * @version  1.0
 */
public class SignServiceVisualPanel extends javax.swing.JPanel {

    //~ Instance fields --------------------------------------------------------

    private final transient PropertyProvider provider;
    private final transient Category category;
    private final transient DocumentListener docL;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cboLogLevel;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblLogLevel;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblServiceUrl;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPasswordField pwdPassword;
    private javax.swing.JTextField txtServiceUrl;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form SignServiceVisualPanel.
     *
     * @param  project   DOCUMENT ME!
     * @param  category  DOCUMENT ME!
     */
    public SignServiceVisualPanel(final LibrarySupportProject project, final Category category) {
        provider = PropertyProvider.getInstance(project.getProjectProperties());
        assert provider != null;

        this.category = category;
        this.docL = new DocumentListenerImpl();

        initComponents();

        init();

        txtServiceUrl.getDocument().addDocumentListener(WeakListeners.document(docL, txtServiceUrl.getDocument()));
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * DOCUMENT ME!
     */
    private void init() {
        final String url = provider.get(PropertyProvider.KEY_SIGN_SERVICE_URL);
        final String username = provider.get(PropertyProvider.KEY_SIGN_SERVICE_USERNAME);
        final String pwCrypt = provider.get(PropertyProvider.KEY_SIGN_SERVICE_PASSWORD);
        final String logLevel = provider.get(PropertyProvider.KEY_SIGN_SERVICE_LOG_LEVEL);

        if (url == null) {
            txtServiceUrl.setText("https://clerkster.cismet.de"); // NOI18N
        } else {
            txtServiceUrl.setText(url);
        }

        txtUsername.setText(username);

        if (pwCrypt == null) {
            pwdPassword.setText(""); // NOI18N
        } else {
            final char[] pw = PasswordEncrypter.decrypt(pwCrypt.toCharArray(), true);
            pwdPassword.setText(String.valueOf(pw));
        }

        if (logLevel == null) {
            cboLogLevel.setSelectedItem("ERROR"); // NOI18N
        } else {
            cboLogLevel.setSelectedItem(logLevel);
        }

        docL.changedUpdate(null);
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    String getUrl() {
        return txtServiceUrl.getText();
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    String getUsername() {
        return txtUsername.getText();
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    char[] getPassWord() {
        return pwdPassword.getPassword();
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    String getLogLevel() {
        return (String)cboLogLevel.getSelectedItem();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblServiceUrl = new javax.swing.JLabel();
        txtServiceUrl = new javax.swing.JTextField();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0),
                new java.awt.Dimension(0, 0),
                new java.awt.Dimension(0, 32767));
        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        pwdPassword = new javax.swing.JPasswordField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        lblLogLevel = new javax.swing.JLabel();
        cboLogLevel = new javax.swing.JComboBox();

        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        lblServiceUrl.setText(NbBundle.getMessage(
                SignServiceVisualPanel.class,
                "SignServiceVisualPanel.lblServiceUrl.text",
                new Object[] {})); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblServiceUrl, gridBagConstraints);

        txtServiceUrl.setText(NbBundle.getMessage(
                SignServiceVisualPanel.class,
                "SignServiceVisualPanel.txtServiceUrl.text",
                new Object[] {})); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtServiceUrl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weighty = 1.0;
        add(filler1, gridBagConstraints);

        lblUsername.setText(NbBundle.getMessage(
                SignServiceVisualPanel.class,
                "SignServiceVisualPanel.lblUsername.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblUsername, gridBagConstraints);

        lblPassword.setText(NbBundle.getMessage(
                SignServiceVisualPanel.class,
                "SignServiceVisualPanel.lblPassword.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblPassword, gridBagConstraints);

        txtUsername.setText(NbBundle.getMessage(
                SignServiceVisualPanel.class,
                "SignServiceVisualPanel.txtUsername.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtUsername, gridBagConstraints);

        pwdPassword.setText(NbBundle.getMessage(
                SignServiceVisualPanel.class,
                "SignServiceVisualPanel.pwdPassword.text"));        // NOI18N
        pwdPassword.setToolTipText(NbBundle.getMessage(
                SignServiceVisualPanel.class,
                "SignServiceVisualPanel.pwdPassword.toolTipText")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(pwdPassword, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jSeparator1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jSeparator2, gridBagConstraints);

        lblLogLevel.setText(NbBundle.getMessage(
                SignServiceVisualPanel.class,
                "SignServiceVisualPanel.lblLogLevel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblLogLevel, gridBagConstraints);

        cboLogLevel.setModel(new javax.swing.DefaultComboBoxModel(
                new String[] { "OFF", "FATAL", "ERROR", "WARN", "INFO", "DEBUG", "ALL" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(cboLogLevel, gridBagConstraints);
    } // </editor-fold>//GEN-END:initComponents

    //~ Inner Classes ----------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @version  $Revision$, $Date$
     */
    private final class DocumentListenerImpl implements DocumentListener {

        //~ Methods ------------------------------------------------------------

        @Override
        public void insertUpdate(final DocumentEvent e) {
            changedUpdate(e);
        }

        @Override
        public void removeUpdate(final DocumentEvent e) {
            changedUpdate(e);
        }

        @Override
        public void changedUpdate(final DocumentEvent e) {
            try {
                final URL u = new URL(txtServiceUrl.getText());
                category.setValid((u.getHost() != null) && !u.getHost().isEmpty());
            } catch (final Exception ex) {
                category.setValid(false);
            }
        }
    }
}

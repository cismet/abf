/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 *  Copyright (C) 2010 mscholl
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
/*
 * StringConfigAttrEditor.java
 *
 * Created on Oct 4, 2010, 9:38:21 AM
 */
package de.cismet.cids.abf.domainserver.project.configattr;

import org.openide.nodes.Node;
import org.openide.util.NbBundle;

import java.awt.EventQueue;

import de.cismet.cids.jpa.entity.configattr.ConfigAttrEntry;

/**
 * DOCUMENT ME!
 *
 * @author   mscholl
 * @version  $Revision$, $Date$
 */
public class ActionConfigAttrEditor extends ConfigAttrEditor {

    //~ Static fields/initializers ---------------------------------------------

    private static final String PREFERRED_ID = "ActionConfigAttrEditor"; // NOI18N

    // Variables declaration - do not modify
    // NOI18N

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblKey;
    private javax.swing.JTextField txtKey;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form StringConfigAttrEditor.
     *
     * @param  dataObject  DOCUMENT ME!
     */
    public ActionConfigAttrEditor(final Node dataObject) {
        super(dataObject);
        initComponents();
    }

    //~ Methods ----------------------------------------------------------------

    @Override
    protected void componentOpened() {
        super.componentOpened();
        init();
    }

    /**
     * DOCUMENT ME!
     *
     * @throws  IllegalStateException  DOCUMENT ME!
     */
    private void init() {
        // init jcomponents
        final ConfigAttrEntry entry = dataObject.getCookie(ConfigAttrEntryCookie.class).getEntry();
        if (entry.getKey() == null) {
            throw new IllegalStateException("entry does not contain a key: " + entry); // NOI18N
        }
        txtKey.setText(entry.getKey().getKey());
    }

    @Override
    protected String preferredID() {
        return PREFERRED_ID;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        lblKey = new javax.swing.JLabel();
        txtKey = new javax.swing.JTextField();

        lblKey.setText(NbBundle.getMessage(ActionConfigAttrEditor.class, "ActionConfigAttrEditor.lblKey.text")); // NOI18N

        txtKey.setEditable(false);
        txtKey.setText(NbBundle.getMessage(ActionConfigAttrEditor.class, "ActionConfigAttrEditor.txtKey.text")); // NOI18N

        final org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(
                layout.createSequentialGroup().addContainerGap().add(lblKey).add(18, 18, 18).add(
                    txtKey,
                    org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                    316,
                    Short.MAX_VALUE).addContainerGap()));
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(
                layout.createSequentialGroup().addContainerGap().add(
                    layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE).add(lblKey).add(
                        txtKey,
                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)).addContainerGap(
                    org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                    Short.MAX_VALUE)));
    } // </editor-fold>//GEN-END:initComponents

    @Override
    void notifyDataObjectChanged() {
        EventQueue.invokeLater(new Runnable() {

                @Override
                public void run() {
                    init();
                }
            });
    }

    @Override
    ConfigAttrEntry getEditorValue() {
        // this editor cannot do anything, return the original value
        return dataObject.getCookie(ConfigAttrEntryCookie.class).getEntry();
    }
}

/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 *  Copyright (C) 2010 mscholl
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
/*
 * StringConfigAttrEditor.java
 *
 * Created on Oct 4, 2010, 9:38:21 AM
 */
package de.cismet.cids.abf.domainserver.project.configattr;

import org.apache.log4j.Logger;

import org.openide.nodes.Node;
import org.openide.util.NbBundle;
import org.openide.util.WeakListeners;

import de.cismet.cids.jpa.entity.configattr.ConfigAttrEntry;
import de.cismet.cids.jpa.entity.configattr.ConfigAttrValue;
import java.awt.EventQueue;

/**
 * DOCUMENT ME!
 *
 * @author   mscholl
 * @version  $Revision$, $Date$
 */
public class StringConfigAttrEditor extends ConfigAttrEditor {

    //~ Static fields/initializers ---------------------------------------------

    private static final String PREFERRED_ID = "StringConfigAttrEditor"; // NOI18N

    private static final transient Logger LOG = Logger.getLogger(StringConfigAttrEditor.class);

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblKey;
    private javax.swing.JLabel lblValue;
    private javax.swing.JTextArea txaValue;
    private javax.swing.JTextField txtKey;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form StringConfigAttrEditor.
     *
     * @param  dataObject  DOCUMENT ME!
     */
    public StringConfigAttrEditor(final Node dataObject) {
        super(dataObject);
        initComponents();
    }

    //~ Methods ----------------------------------------------------------------

    @Override
    protected void componentOpened() {
        initValues();
        txaValue.getDocument().addDocumentListener(WeakListeners.document(saveListener, txaValue.getDocument()));
    }

    @Override
    protected void componentActivated()
    {
        super.componentActivated();
        txaValue.requestFocus();
    }


    /**
     * DOCUMENT ME!
     *
     * @throws  IllegalStateException  DOCUMENT ME!
     */
    private void initValues() {
        // init jcomponents
        final ConfigAttrEntry entry = dataObject.getCookie(ConfigAttrEntryCookie.class).getEntry();
        if (entry.getKey() == null) {
            throw new IllegalStateException("entry does not contain a key: " + entry);   // NOI18N
        } else if (entry.getValue() == null) {
            throw new IllegalStateException("entry does not contain a value: " + entry); // NOI18N
        }
        txtKey.setText(entry.getKey().getKey());
        txaValue.setText(entry.getValue().getValue());

    }

    @Override
    protected String preferredID() {
        return PREFERRED_ID;
    }

    @Override
    ConfigAttrEntry getEditorValue()
    {
        final ConfigAttrEntry entry = dataObject.getCookie(ConfigAttrEntryCookie.class).getEntry();

        final ConfigAttrValue newValue = new ConfigAttrValue();
        newValue.setValue(txaValue.getText());

        final ConfigAttrEntry newEntry = new ConfigAttrEntry();
        newEntry.setDomain(entry.getDomain());
        newEntry.setId(entry.getId());
        newEntry.setKey(entry.getKey());
        newEntry.setType(entry.getType());
        newEntry.setUser(entry.getUser());
        newEntry.setUsergroup(entry.getUsergroup());
        newEntry.setValue(newValue);

        return newEntry;
    }

    @Override
    void notifyDataObjectChanged()
    {
        EventQueue.invokeLater(new Runnable() {

            @Override
            public void run()
            {
                initValues();
                setModified(false);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblKey = new javax.swing.JLabel();
        txtKey = new javax.swing.JTextField();
        lblValue = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaValue = new javax.swing.JTextArea();

        lblKey.setText(NbBundle.getMessage(StringConfigAttrEditor.class, "StringConfigAttrEditor.lblKey.text")); // NOI18N

        txtKey.setEditable(false);
        txtKey.setText(NbBundle.getMessage(StringConfigAttrEditor.class, "StringConfigAttrEditor.txtKey.text")); // NOI18N

        lblValue.setText(NbBundle.getMessage(StringConfigAttrEditor.class, "StringConfigAttrEditor.lblValue.text")); // NOI18N

        txaValue.setColumns(20);
        txaValue.setRows(5);
        txaValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txaValueKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txaValue);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(lblKey)
                        .add(18, 18, 18)
                        .add(txtKey, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE))
                    .add(lblValue))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblKey)
                    .add(txtKey, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(lblValue)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void txaValueKeyTyped(final java.awt.event.KeyEvent evt)//GEN-FIRST:event_txaValueKeyTyped
    {//GEN-HEADEREND:event_txaValueKeyTyped
        txaValue.getDocument().addUndoableEditListener(undoRedo);
    }//GEN-LAST:event_txaValueKeyTyped
}
